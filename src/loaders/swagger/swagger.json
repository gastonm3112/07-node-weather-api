{
  "openapi": "3.0.0",
  "info": {
    "title": "Weather Api.",
    "description": "## Api to get the weather of a city.",
    "version": "0.0.1",
    "contact": {
      "email": "gastonm3112@gmail.com"
    }
  },

  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "Desarrollo"
    },
    {
      "url": "https://node-07-weather-api.herokuapp.com/api/v1",
      "description": "Producci√≥n"
    }
  ],
  "tags": [
    {
      "name": "cities",
      "description": "Operations about cities."
    }
  ],
  "paths": {
    "/cities/{city}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "city",
            "description": "name of the city",
            "required": true,
            "Schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["cities"],
        "summary": "Get a list of cities.",
        "description": "",
        "responses": {
          "200": {
            "description": "The data array of cities in JSON format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cities"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/weather/{city}/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "city",
            "description": "name of the city",
            "required": true,
            "Schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "id of the city",
            "required": true,
            "Schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["weather"],
        "summary": "Get the weather of a city by providing a city and an id.",
        "description": "",
        "responses": {
          "200": {
            "description": "The data object of the weather of the city",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Weather"
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/weather/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "lon",
            "description": "Pass the long of the city",
            "required": true,
            "Schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "in": "query",
            "name": "lat",
            "description": "Pass the latitude of the city",
            "required": true,
            "Schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          }
        ],
        "tags": ["weather"],
        "summary": "Get the weather of a city by providing long and lat.",
        "description": "",
        "responses": {
          "200": {
            "description": "The data object of the weather of the city",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Weather"
                }
              }
            }
          },
          "500": {
            "description": "Error message in JSON format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Cities": {
        "required": ["city"],
        "type": "object",
        "properties": {
          "id": {
            "description": "The city id.",
            "type": "string",
            "example": "neighborhood.289809"
          },
          "name": {
            "description": "The city name.",
            "type": "string",
            "example": "Miami, Florida"
          },
          "log": {
            "description": "The long of the city.",
            "type": "integer",
            "example": "-80.1299"
          },
          "lat": {
            "description": "The lat of the city.",
            "type": "integer",
            "example": "25.7944"
          }
        }
      },
      "Weather": {
        "required": ["city", "id"],
        "type": "object",
        "properties": {
          "description": {
            "description": "weather description.",
            "type": "string",
            "example": "lluvia ligera"
          },
          "temperature": {
            "description": "The city temperature.",
            "type": "integer",
            "example": "27.98"
          },
          "temperatureMin": {
            "description": "The min temperature.",
            "type": "integer",
            "example": "19.95"
          },
          "temperatureMax": {
            "description": "The maximum temperature.",
            "type": "integer",
            "example": "29.15"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "integer",
            "example": "500"
          },
          "message": {
            "description": "Error message",
            "type": "string",
            "example": "No encontrado"
          }
        }
      }
    }
  }
}
